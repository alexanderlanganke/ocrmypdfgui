name: ocrmypdfgui
title: ocrmypdfgui
base: core20
version: '0.9.15' # Matched with setup.py
summary: Hobby Project GUI for the Python Program "OCRmyPDF" by James R. Barlow
description: |
  I use James R. Barlow's OCRmyPDF heavily in my paperless Office and have created this Python Project as a GUI wrapper to run batch jobs on my filesystem. This is strictly a Hobby Project and is not "official". Feel free to use it if you like. Includes full current version of OCRmyPDF as backend. Icons and banner made by Freepik from www.flaticon.com
icon: gui/ocrmypdfgui.png
grade: stable
confinement: strict

architectures: [amd64]

environment:
    TESSDATA_PREFIX: $SNAP/usr/share/tesseract-ocr/4.00/tessdata # Verify version from staged tesseract
    GS_LIB: $SNAP/usr/share/ghostscript/9.50/Resource/Init     # Verify version from staged ghostscript
    GS_FONTPATH: $SNAP/usr/share/ghostscript/9.50/Resource/Font # Verify version from staged ghostscript
    LD_LIBRARY_PATH: $SNAP/usr/lib/x86_64-linux-gnu

apps:
  ocrmypdfgui:
    command: usr/bin/ocrmypdfgui # This should now exist due to override-build + prime

    desktop: gui/ocrmypdfgui.desktop
    extensions: [gnome-3-38] 
    plugs:
      - desktop
      - desktop-legacy
      - wayland
      - x11
      - home
      - removable-media

parts:
  ocrmypdfgui:
    plugin: python
    source: .
    build-packages: 
      - python3-setuptools
      - python3-pip
      - python3-wheel
    python-packages:
      - cffi
      - coloredlogs
      - img2pdf
      - ocrmypdf
      - pdfminer.six
      - pikepdf
      - Pillow
      - pluggy
      - pytesseract
      - rarfile
      - reportlab
      - tqdm
    stage-packages:
      - ghostscript
      - tesseract-ocr-eng 
    override-build: |
      set -x
      echo "## Starting override-build ##"
      
      # Run default build steps (creates venv, installs python-packages, installs project via pip install .)
      snapcraftctl build
      
      SCRIPT_IN_VENV="$SNAPCRAFT_PART_INSTALL/bin/ocrmypdfgui"
      echo "Checking for script at $SCRIPT_IN_VENV after default 'snapcraftctl build':"
      ls -la "$SNAPCRAFT_PART_INSTALL/bin/" || true # List contents for context
      
      if [ -f "$SCRIPT_IN_VENV" ]; then
        echo "Script $SCRIPT_IN_VENV found after default 'snapcraftctl build'."
      else
        echo "ERROR: Script $SCRIPT_IN_VENV NOT found after default 'snapcraftctl build'."
        echo "Attempting verbose re-install of local package into the existing venv..."
        # Use the venv's pip to install the project.
        # --no-deps: assumes dependencies from python-packages are already handled.
        # --force-reinstall: try to force it even if pip thinks it's there.
        # -vvv: maximum verbosity
        "$SNAPCRAFT_PART_INSTALL/bin/python3" -m pip install -vvv --no-deps --force-reinstall .
        
        echo "Checking for script at $SCRIPT_IN_VENV after verbose re-install:"
        if [ -f "$SCRIPT_IN_VENV" ]; then
          echo "Script $SCRIPT_IN_VENV NOW FOUND after verbose re-install."
        else
          echo "CRITICAL ERROR: Script $SCRIPT_IN_VENV still not found after verbose re-install."
          echo "Listing $SNAPCRAFT_PART_INSTALL/bin/ again:"
          ls -la "$SNAPCRAFT_PART_INSTALL/bin/" || true
          # To make the build fail if the script is essential and not generated:
          # exit 1 
        fi
      fi
      
      # If the script exists (either from default build or verbose re-install), copy it.
      if [ -f "$SCRIPT_IN_VENV" ]; then
        echo "Proceeding to stage $SCRIPT_IN_VENV to $SNAPCRAFT_PART_INSTALL/usr/bin/"
        DEST_BIN_IN_PART_INSTALL="$SNAPCRAFT_PART_INSTALL/usr/bin"
        mkdir -p "$DEST_BIN_IN_PART_INSTALL"
        cp "$SCRIPT_IN_VENV" "$DEST_BIN_IN_PART_INSTALL/ocrmypdfgui"
        chmod +x "$DEST_BIN_IN_PART_INSTALL/ocrmypdfgui"
        echo "Copied ocrmypdfgui to $DEST_BIN_IN_PART_INSTALL/ocrmypdfgui."
      else
        echo "WARNING: Script $SCRIPT_IN_VENV does not exist, cannot stage it to usr/bin within part install."
      fi
      echo "## End of override-build ##"
    # override-prime: (Removed to rely on override-build staging)

