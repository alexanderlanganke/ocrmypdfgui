name: ocrmypdfgui
title: ocrmypdfgui
base: core20
version: '0.9.15' # Matched with setup.py
summary: Hobby Project GUI for the Python Program "OCRmyPDF" by James R. Barlow
description: |
  I use James R. Barlow's OCRmyPDF heavily in my paperless Office and have created this Python Project as a GUI wrapper to run batch jobs on my filesystem. This is strictly a Hobby Project and is not "official". Feel free to use it if you like. Includes full current version of OCRmyPDF as backend. Icons and banner made by Freepik from www.flaticon.com
icon: gui/ocrmypdfgui.png
grade: stable
confinement: strict

architectures: [amd64]

environment:
    TESSDATA_PREFIX: $SNAP/usr/share/tesseract-ocr/4.00/tessdata # Verify version from staged tesseract
    GS_LIB: $SNAP/usr/share/ghostscript/9.50/Resource/Init     # Verify version from staged ghostscript
    GS_FONTPATH: $SNAP/usr/share/ghostscript/9.50/Resource/Font # Verify version from staged ghostscript
    LD_LIBRARY_PATH: $SNAP/usr/lib/x86_64-linux-gnu

apps:
  ocrmypdfgui:
    command: usr/bin/ocrmypdfgui # Should be placed here by the modified override-build + prime
    desktop: gui/ocrmypdfgui.desktop
    extensions: [gnome-3-38] 
    plugs:
      - desktop
      - desktop-legacy
      - wayland
      - x11
      - home
      - removable-media

parts:
  ocrmypdfgui:
    plugin: python
    source: .
    build-packages: 
      - python3-setuptools
      - python3-pip
      - python3-wheel
    python-packages:
      - cffi
      - coloredlogs
      - img2pdf
      - ocrmypdf
      - pdfminer.six
      - pikepdf
      - Pillow
      - pluggy
      - pytesseract
      - rarfile
      - reportlab
      - tqdm
    stage-packages:
      - ghostscript
      - tesseract-ocr-eng 
    override-build: |
      set -x
      # Default build steps (creates venv, runs pip install for python-packages and setup.py)
      snapcraftctl build
      
      echo "--- Manually staging ocrmypdfgui script within the part's install directory ---"
      # $SNAPCRAFT_PART_INSTALL is the root of this part's installation area (e.g., parts/<part-name>/install)
      # This is where the venv is created by `snapcraftctl build` for the python plugin.
      SCRIPT_IN_VENV="$SNAPCRAFT_PART_INSTALL/bin/ocrmypdfgui"
      # We want to place the script into a standard location *within the part's install tree*
      # that snapcraft will then pick up and place into $SNAPCRAFT_PRIME/usr/bin during the main prime stage.
      DEST_BIN_IN_PART_INSTALL="$SNAPCRAFT_PART_INSTALL/usr/bin" 
      
      if [ -f "$SCRIPT_IN_VENV" ]; then
        echo "Found script at $SCRIPT_IN_VENV"
        mkdir -p "$DEST_BIN_IN_PART_INSTALL"
        echo "Copying $SCRIPT_IN_VENV to $DEST_BIN_IN_PART_INSTALL/ocrmypdfgui"
        cp "$SCRIPT_IN_VENV" "$DEST_BIN_IN_PART_INSTALL/ocrmypdfgui"
        chmod +x "$DEST_BIN_IN_PART_INSTALL/ocrmypdfgui"
        echo "Copied ocrmypdfgui to $DEST_BIN_IN_PART_INSTALL/ocrmypdfgui and made executable."
      else
        echo "ERROR: ocrmypdfgui script not found at $SCRIPT_IN_VENV after 'snapcraftctl build'."
      fi
      echo "--- End of override-build for ocrmypdfgui part ---"
    # override-prime: (Removed to rely on override-build staging)

